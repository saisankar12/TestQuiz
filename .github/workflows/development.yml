# Workflow name
name: Debug Workflow

# When it will be triggered
on:
  push:
    branches:
      - 'master'

# Where it will run
jobs:
  unit-test:
    runs-on: macos-latest
    steps:
      - name: Set TimeZone
        run: |
          date
          sudo unlink /etc/localtime
          sudo ln -sf /var/db/timezone/zoneinfo/Europe/London /etc/localtime
          date

      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          fetch-depth: 0

      - name: Setting up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Installing Android SDK
        uses: android-actions/setup-android@v2

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run Unit Tests
        run: |
          date
          bash ./gradlew clean
          bash ./gradlew testDebugUnitTest

      - name: Save Unit Test Reports Artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-reports
          path: app/build/reports/tests/testDebugUnitTest/index.html

      - name:  Build Debug APK
        run: |
          export DEBUG_BUILD_OFFSET=001
          export BUILD_NUMBER=$(($GITHUB_RUN_NUMBER + $DEBUG_BUILD_OFFSET))
          export DEBUG_VERSION=$(git tag --sort=-creatordate | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | head -1)
          env | sort
          ./scripts/package.sh $DEBUG_VERSION $BUILD_NUMBER

      - name: Save APK Artifact
        uses: actions/upload-artifact@v3
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Build debug APK and UI test APK
        run: ./gradlew assembleDebug assembleDebugAndroidTest

      - name: Save debug APK
        uses: actions/upload-artifact@v3
        with:
          name: debug-app-apk
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Save UI tests APK
        uses: actions/upload-artifact@v3
        with:
          name: ui-tests-apk
          path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk

  ui-tests:
    runs-on: macos-latest
    needs: unit-test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Download Debug APK
        uses: actions/download-artifact@v3
        with:
          name: debug-app-apk

      - name: Download UI tests APK
        uses: actions/download-artifact@v3
        with:
          name: ui-tests-apk

      - name: Setting up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2

      - name: Run build with Gradle Wrapper
        run: ./gradlew build

      - name: Create Android emulator
        run: |
          sdkmanager --install "system-images;android-25;default;x86"
          echo "no" | avdmanager --verbose create avd --force --name TestAvd -d pixel --abi default/x86 --package 'system-images;android-25;default;x86'
          
          if false; then
          emulator_config=/Users/runner/.android/emu-update-last-check.ini
          # The following madness is to support empty OR populated config.ini files,
          # the state of which is dependant on the version of the emulator used (which we don't control),
          # so let's be defensive to be safe.
          # Replace existing config (NOTE we're on MacOS so sed works differently!)
          sed -i .bak 's/hw.lcd.density=.*/hw.lcd.density=420/' "$emulator_config"
          sed -i .bak 's/hw.lcd.height=.*/hw.lcd.height=1920/' "$emulator_config"
          sed -i .bak 's/hw.lcd.width=.*/hw.lcd.width=1080/' "$emulator_config"
          # Or, add new config
          
          if ! grep -q "hw.lcd.density" "$emulator_config"; then
          echo "hw.lcd.density=420" >> "$emulator_config"
          fi
          
          if ! grep -q "hw.lcd.height" "$emulator_config"; then
          echo "hw.lcd.height=1920" >> "$emulator_config"
          fi
          
          if ! grep -q "hw.lcd.width" "$emulator_config"; then
          echo "hw.lcd.width=1080" >> "$emulator_config"
          fi
          echo "Emulator settings ($emulator_config)"
          cat "$emulator_config"
          fi

      - name: Start android emulator
        run: |
          echo "Starting emulator and waiting for boot to complete...."
          ls -la $ANDROID_HOME/emulator
          nohup $ANDROID_HOME/tools/emulator -avd TestAvd -gpu host -no-audio -no-boot-anim -camera-back none -camera-front none -qemu -m 2048 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do echo "wait..."; sleep 1; done; input keyevent 82'
          echo "Emulator has finished booting"
          $ANDROID_HOME/platform-tools/adb devices
          sleep 30
          screencapture screenshot.jpg
          $ANDROID_HOME/platform-tools/adb exec-out screencap -p > emulator.png

      - name: Disable animations
        run: |
          adb shell settings put global window_animation_scale 0 &
          adb shell settings put global transition_animation_scale 0 &
          adb shell settings put global animator_duration_scale 0 &

      - name: Run UI tests
        run: |
          date
          bash ./gradlew clean
          bash ./gradlew connectedDebugAndroidTest

      - name: Download application APK
        uses: actions/download-artifact@v3
        with:
          name: debug-apk

      

      - name: Tag last green build
        run: |
          export HEAD_HASH=$(git rev-parse --short HEAD)
          export GREEN_TAG="green-$HEAD_HASH"
          git tag $GREEN_TAG
          git push origin $GREEN_TAG
  

  sonarqube:
    name: SonarQube Trigger
    runs-on: ubuntu-latest
    needs: ui-tests
    steps:
      - name: Checking out
        uses: actions/checkout@master
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: SonarQube Scan
        uses: kitabisa/sonarqube-action@v1.2.0
        with:
          host: ${{ secrets.SONARQUBE_HOST }}
          login: ${{ secrets.SONARQUBE_TOKEN }}
